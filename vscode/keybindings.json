[
  {
    "key": "ctrl+. g",
    "command": "editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+s",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "alt+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "ctrl+,",
    "command": "expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+t space",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+t v",
    "command": "magit.status"
  },
  {
    "key": "ctrl+x ctrl+q",
    "command": "workbench.action.closeAllEditors",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+x ctrl+k",
    "command": "-workbench.action.closeAllEditors",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+x ctrl+k",
    "command": "workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+x k",
    "command": "-workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+i",
    "command": "magit.toggle-fold",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "ctrl+m",
    "command": "magit.visit-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "ctrl+t p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "shift+alt+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "ctrl+t i",
    "command": "editor.action.reindentselectedlines"
  },
  {
    "key": "ctrl+x i",
    "command": "editor.action.reindentselectedlines"
  },
  {
    "key": "ctrl+j",
    "command": "maximizeterminal.closeMaximizedTerminal",
    "when": "activePanel | terminalFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+shift+,",
    "command": "emacs-mcx.beginningOfBuffer",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "shift+alt+,",
    "command": "-emacs-mcx.beginningOfBuffer",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+shift+,",
    "command": "emacs-mcx.beginningOfBuffer",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
  },
  {
    "key": "shift+alt+,",
    "command": "-emacs-mcx.beginningOfBuffer",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
  },
  {
    "key": "ctrl+shift+.",
    "command": "emacs-mcx.endOfBuffer",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "shift+alt+.",
    "command": "-emacs-mcx.endOfBuffer",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+k",
    "command": "emacs-mcx.killLine",
    "when": "terminalFocus || editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "-emacs-mcx.killLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-magit.move-next-entity",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "ctrl+j",
    "command": "-emacs-mcx.newLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+x ctrl+c",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+v",
    "command": "-emacs-mcx.isearchExit",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "ctrl+[ v",
    "command": "-emacs-mcx.isearchExit",
    "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "ctrl+[ v",
    "command": "-emacs-mcx.scrollDownCommand",
    "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+v",
    "command": "-emacs-mcx.scrollUpCommand",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+i",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+d",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+t z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+x z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+t l",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+m",
    "command": "explorer.openAndPassFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+a",
    "command": "-emacs-mcx.isearchExit",
    "when": "editorFocus && findWidgetVisible && !config.emacs-mcx.cursorMoveOnFindWidget && !isComposing && !replaceInputFocussed"
  },
  {
    "key": "ctrl+a",
    "command": "emacs-mcx.moveBeginningOfLine"
  },
  {
    "key": "ctrl+a",
    "command": "-emacs-mcx.moveBeginningOfLine",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t e",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+t w",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+p",
    "command": "emacs-mcx.backwardParagraph",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+n",
    "command": "emacs-mcx.forwardParagraph",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+t ctrl+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "emacs-mcx.copyRectangleAsKill",
    "when": "editorTextFocus && emacs-mcx.acceptingRectCommand && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+c",
    "command": "emacs-mcx.copyRectangleAsKill",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && emacs-mcx.acceptingRectCommand"
  },
  {
    "key": "ctrl+w",
    "command": "emacs-mcx.copyRegion",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+w",
    "command": "emacs-mcx.copyRegion",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
  },
  {
    "key": "ctrl+t h",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+t d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+.",
    "command": "undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+t shift+,",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+t n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+t g",
    "command": "search.action.openEditor"
  },
  {
    "key": "ctrl+c",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+shift+v",
    "command": "emacs-mcx.scrollDownCommand",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !suggestWidgetVisible"
  },
  {
    "key": "alt+v",
    "command": "-emacs-mcx.scrollDownCommand",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+v",
    "command": "emacs-mcx.scrollDownCommand",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "alt+v",
    "command": "-emacs-mcx.scrollDownCommand",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+v",
    "command": "emacs-mcx.scrollUpCommand",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "pagedown",
    "command": "-emacs-mcx.scrollUpCommand",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "alt+w",
    "command": "-emacs-mcx.copyRegion",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "alt+w",
    "command": "-emacs-mcx.copyRegion",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "emacs-mcx.killRegion",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "-emacs-mcx.killRegion",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+w",
    "command": "emacs-mcx.killRegion",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+t shift+.",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+t ctrl+s",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+t ctrl+r",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+t f",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+j",
    "command": "codeium.openCodeiumCommand",
    "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-codeium.openCodeiumCommand",
    "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-codeium.openCodeiumCommand",
    "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+t t",
    "command": "extension.elixirJumpToTest",
    "when": "editorTextFocus && editorLangId == 'elixir'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-extension.elixirJumpToTest",
    "when": "editorTextFocus && editorLangId == 'elixir'"
  },
  {
    "key": "ctrl+t s",
    "command": "workbench.action.createTerminalEditor"
  },
  {
    "key": "ctrl+t j",
    "command": "workbench.action.terminal.goToRecentDirectory",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+j",
    "command": "-emacs-mcx.isearchExit",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+x o",
    "command": "-workbench.action.navigateEditorGroups",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+o",
    "command": "-lineBreakInsert",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+x z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext && !terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  }
]
